{
  "swagger": "2.0",
  "info": {
    "title": "DnsResolverManagementClient",
    "description": "The DNS Resolver Management Client.",
    "version": "2020-01-01-preview"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "azure_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "flow": "implicit",
      "description": "Azure Active Directory OAuth2 Flow",
      "scopes": {
        "user_impersonation": "impersonate your user account"
      }
    }
  },
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{resolverName}": {
      "put": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_CreateOrUpdate",
        "description": "Creates or updates a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The DNS resolver has been created.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "200": {
            "description": "The DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "202": {
            "description": "The operation to upsert DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS resolver": {
            "$ref": "./examples/DnsResolver_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_Update",
        "description": "Updates a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "202": {
            "description": "The operation to update DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS resolver": {
            "$ref": "./examples/DnsResolver_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_Delete",
        "description": "Deletes a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver has been deleted."
          },
          "202": {
            "description": "The operation to delete DNS resolver has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The DNS resolver was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS resolver": {
            "$ref": "./examples/DnsResolver_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_Get",
        "description": "Gets properties of a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS resolver was found.",
            "schema": {
              "$ref": "#/definitions/DnsResolver"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS resolver": {
            "$ref": "./examples/DnsResolver_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers": {
      "get": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_ListByResourceGroup",
        "description": "Lists DNS resolvers within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/DnsResolverListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolvers by resource group": {
            "$ref": "./examples/DnsResolver_ListByResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsResolvers": {
      "get": {
        "tags": [
          "DnsResolvers"
        ],
        "operationId": "DnsResolvers_List",
        "description": "Lists DNS resolvers in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/DnsResolverListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolvers by subscription": {
            "$ref": "./examples/DnsResolver_ListBySubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{resolverName}/inboundEndpoints/{inboundEndpointName}": {
      "put": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_CreateOrUpdate",
        "description": "Creates or updates an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The inbound endpoint for the DNS resolver has been created.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "200": {
            "description": "The inbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to upsert inbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_Update",
        "description": "Updates an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The inbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to update inbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_Delete",
        "description": "Deletes an inbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The inbound endpoint for the DNS resolver has been deleted."
          },
          "202": {
            "description": "The operation to delete inbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The inbound endpoint for the DNS resolver was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_Get",
        "description": "Gets properties of an inbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/InboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The inbound endpoint for the DNS resolver was found.",
            "schema": {
              "$ref": "#/definitions/InboundEndpoint"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve inbound endpoint for DNS resolver": {
            "$ref": "./examples/InboundEndpoint_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{resolverName}/inboundEndpoints": {
      "get": {
        "tags": [
          "InboundEndpoints"
        ],
        "operationId": "InboundEndpoints_List",
        "description": "Lists inbound endpoints for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/InboundEndpointListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List inbound endpoints by DNS resolver": {
            "$ref": "./examples/InboundEndpoint_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{resolverName}/outboundEndpoints/{outboundEndpointName}": {
      "put": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_CreateOrUpdate",
        "description": "Creates or updates an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The outbound endpoint for the DNS resolver has been created.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "200": {
            "description": "The outbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to upsert outbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_Update",
        "description": "Updates an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The outbound endpoint for the DNS resolver has been updated.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "202": {
            "description": "The operation to update outbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_Delete",
        "description": "Deletes an outbound endpoint for a DNS resolver. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The outbound endpoint for the DNS resolver has been deleted."
          },
          "202": {
            "description": "The operation to delete outbound endpoint for the DNS resolver has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The outbound endpoint for the DNS resolver was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_Get",
        "description": "Gets properties of an outbound endpoint for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/OutboundEndpointNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The outbound endpoint for the DNS resolver was found.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpoint"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve outbound endpoint for DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{resolverName}/outboundEndpoints": {
      "get": {
        "tags": [
          "OutboundEndpoints"
        ],
        "operationId": "OutboundEndpoints_List",
        "description": "Lists outbound endpoints for a DNS resolver.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsResolverNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/OutboundEndpointListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List outbound endpoints by DNS resolver": {
            "$ref": "./examples/OutboundEndpoint_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{rulesetName}": {
      "put": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_CreateOrUpdate",
        "description": "Creates or updates a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The DNS forwarding ruleset has been created.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "200": {
            "description": "The DNS forwarding ruleset has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "202": {
            "description": "The operation to upsert DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Upsert DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_Update",
        "description": "Updates a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS forwarding ruleset has been updated.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "202": {
            "description": "The operation to update DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Update DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_Delete",
        "description": "Deletes a DNS forwarding ruleset. WARNING: This operation cannot be undone. All forwarding rules within the ruleset will be deleted.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS forwarding ruleset has been deleted."
          },
          "202": {
            "description": "The operation to delete DNS forwarding ruleset has been accepted and will complete asynchronously."
          },
          "204": {
            "description": "The DNS forwarding ruleset was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-long-running-operation": true,
        "x-ms-examples": {
          "Delete DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_Get",
        "description": "Gets a DNS forwarding ruleset properties.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The DNS forwarding ruleset was found.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRuleset"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve DNS forwarding ruleset": {
            "$ref": "./examples/DnsForwardingRuleset_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets": {
      "get": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_ListByResourceGroup",
        "description": "Lists DNS forwarding rulesets within a resource group.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by resource group": {
            "$ref": "./examples/DnsForwardingRuleset_ListInResourceGroup.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Network/dnsForwardingRulesets": {
      "get": {
        "tags": [
          "DnsForwardingRulesets"
        ],
        "operationId": "DnsForwardingRulesets_List",
        "description": "Lists DNS forwarding rulesets in all resource groups of a subscription.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/DnsForwardingRulesetListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS forwarding rulesets by subscription": {
            "$ref": "./examples/DnsForwardingRuleset_ListInSubscription.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{rulesetName}/forwardingRules/{ruleName}": {
      "put": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_CreateOrUpdate",
        "description": "Creates or updates a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            },
            "description": "Parameters supplied to the CreateOrUpdate operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          },
          {
            "$ref": "#/parameters/IfNoneMatchParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "The forwarding rule has been created.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "200": {
            "description": "The forwarding rule has been updated.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Upsert forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Put.json"
          }
        }
      },
      "patch": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_Update",
        "description": "Updates a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            },
            "description": "Parameters supplied to the Update operation."
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The forwarding rule has been updated.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Update forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Patch.json"
          }
        }
      },
      "delete": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_Delete",
        "description": "Deletes a forwarding rule in a DNS forwarding rulset. WARNING: This operation cannot be undone.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/IfMatchParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The forwarding rule has been deleted."
          },
          "204": {
            "description": "The forwarding rule was not found."
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Delete forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Delete.json"
          }
        }
      },
      "get": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_Get",
        "description": "Gets properties of a forwarding rule in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ForwardingRuleNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The forwarding rule was found.",
            "schema": {
              "$ref": "#/definitions/ForwardingRule"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-examples": {
          "Retrieve forwarding rule in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_Get.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{rulesetName}/forwardingRules": {
      "get": {
        "tags": [
          "ForwardingRules"
        ],
        "operationId": "ForwardingRules_List",
        "description": "Lists forwarding rules in a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/ForwardingRuleListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List forwarding rules in a DNS forwarding ruleset": {
            "$ref": "./examples/ForwardingRule_List.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsForwardingRulesets/{rulesetName}/dnsResolverLinks": {
      "get": {
        "tags": [
          "DnsResolverLinks"
        ],
        "operationId": "DnsResolverLinks_ListByDnsForwardingRuleset",
        "description": "Lists DNS resolver links to a DNS forwarding ruleset.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/DnsForwardingRulesetNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/DnsResolverLinkListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver links by DNS forwarding ruleset": {
            "$ref": "./examples/DnsResolverLink_ListByDnsForwardingRuleset.json"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/dnsResolverLinks": {
      "get": {
        "tags": [
          "DnsResolverLinks"
        ],
        "operationId": "DnsResolverLinks_ListByVirtualNetwork",
        "description": "Lists DNS resolver links to a virtual network.",
        "parameters": [
          {
            "$ref": "#/parameters/SubscriptionIdParameter"
          },
          {
            "$ref": "#/parameters/ResourceGroupNameParameter"
          },
          {
            "$ref": "#/parameters/VirtualNetworkNameParameter"
          },
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/TopParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The operation succeeded.",
            "schema": {
              "$ref": "#/definitions/DnsResolverLinkListResult"
            }
          },
          "default": {
            "description": "Default response. It will be deserialized as per the Error definition.",
            "schema": {
              "$ref": "#/definitions/CloudError"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        },
        "x-ms-examples": {
          "List DNS resolver links by virtual network": {
            "$ref": "./examples/DnsResolverLink_ListByVirtualNetwork.json"
          }
        }
      }
    }
  },
  "definitions": {
    "DnsResolverProperties": {
      "description": "Represents the properties of a DNS resolver.",
      "properties": {
        "virtualNetwork": {
          "description": "The reference to the virtual network. This cannot be changed after creation.",
          "$ref": "#/definitions/SubResource"
        },
        "maxNumberOfInboundEndpoints": {
          "description": "The maximum number of inbound endpoints that can be created for the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "numberOfInboundEndpoints": {
          "description": "The current number of inbound endpoints for the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "maxNumberOfOutboundEndpoints": {
          "description": "The maximum number of outbound endpoints that can be created for the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "numberOfOutboundEndpoints": {
          "description": "The current number of outbound endpoints for the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "dnsResolverState": {
          "description": "The current status of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "string",
          "enum": [
            "Connected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "DnsResolverState",
            "modelAsString": true
          },
          "readOnly": true
        },
        "provisioningState": {
          "description": "The current provisioning state of the DNS resolver. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "DnsResolver": {
      "description": "Describes a DNS resolver.",
      "properties": {
        "etag": {
          "description": "ETag of the DNS resolver.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the DNS resolver.",
          "$ref": "#/definitions/DnsResolverProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ]
    },
    "DnsResolverListResult": {
      "description": "The response to an enumeration operation on DNS resolvers.",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS resolvers.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsResolver"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InboundEndpointProperties": {
      "description": "Represents the properties of an inbound endpoint for a DNS resolver.",
      "properties": {
        "ipConfigurations": {
          "description": "IP configurations for the inbound endpoint.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/IpConfiguration"
          }
        },
        "provisioningState": {
          "description": "The current provisioning state of the inbound endpoint. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "InboundEndpoint": {
      "description": "Describes an inbound endpoint for a DNS resolver.",
      "properties": {
        "etag": {
          "description": "ETag of the inbound endpoint.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the inbound endpoint.",
          "$ref": "#/definitions/InboundEndpointProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "InboundEndpointListResult": {
      "description": "The response to an enumeration operation on inbound endpoints for a DNS resolver.",
      "properties": {
        "value": {
          "description": "Enumeration of the inbound endpoints for a DNS resolver.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InboundEndpoint"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "OutboundEndpointProperties": {
      "description": "Represents the properties of an outbound endpoint for a DNS resolver.",
      "properties": {
        "subnet": {
          "description": "The reference to the subnet used for the outbound endpoint.",
          "$ref": "#/definitions/SubResource"
        },
        "provisioningState": {
          "description": "The current provisioning state of the outbound endpoint. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "OutboundEndpoint": {
      "description": "Describes an outbound endpoint for a DNS resolver.",
      "properties": {
        "etag": {
          "description": "ETag of the outbound endpoint.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the outbound endpoint.",
          "$ref": "#/definitions/OutboundEndpointProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "OutboundEndpointListResult": {
      "description": "The response to an enumeration operation on outbound endpoints for a DNS resolver.",
      "properties": {
        "value": {
          "description": "Enumeration of the outbound endpoints for a DNS resolver.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OutboundEndpoint"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsForwardingRulesetProperties": {
      "description": "Represents the properties of a DNS forwarding ruleset.",
      "properties": {
        "dnsResolverOutboundEndpoint": {
          "description": "The reference to the DNS resolver outbound endpoint that is used to route DNS queries matching the forwarding rules in the ruleset to the target DNS servers. This cannot be changed after creation.",
          "$ref": "#/definitions/SubResource"
        },
        "maxNumberOfForwardingRules": {
          "description": "The maximum number of forwarding rules that can be created for the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "numberOfForwardingRules": {
          "description": "The current number of forwarding rules for the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "maxNumberOfDnsResolverLinks": {
          "description": "The maximum number of DNS resolvers that can be linked to the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "numberOfDnsResolverLinks": {
          "description": "The current number of DNS resolvers that are linked to the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "provisioningState": {
          "description": "The current provisioning state of the DNS forwarding ruleset. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "DnsForwardingRuleset": {
      "description": "Describes a DNS forwarding ruleset.",
      "properties": {
        "etag": {
          "description": "ETag of the DNS fowarding ruleset.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the DNS fowarding ruleset.",
          "$ref": "#/definitions/DnsForwardingRulesetProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/TrackedResource"
        }
      ]
    },
    "DnsForwardingRulesetListResult": {
      "description": "The response to an enumeration operation on DNS forwarding rulesets.",
      "properties": {
        "value": {
          "description": "Enumeration of theDNS forwarding rulesets.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsForwardingRuleset"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ForwardingRuleProperties": {
      "description": "Represents the properties of a forwarding rule within a DNS forwarding ruleset.",
      "properties": {
        "targetDnsServers": {
          "description": "DNS servers to forward the DNS query to.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetDnsServer"
          }
        },
        "forwardingRuleState": {
          "type": "string",
          "description": "The state of forwarding rule.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ForwardingRuleState",
            "modelAsString": true
          }
        },
        "provisioningState": {
          "description": "The current provisioning state of the forwarding rule. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "ForwardingRule": {
      "description": "Describes a forwarding rule within a DNS forwarding ruleset.",
      "properties": {
        "etag": {
          "description": "ETag of the forwarding rule.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the forwarding rule.",
          "$ref": "#/definitions/ForwardingRuleProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "ForwardingRuleListResult": {
      "description": "The response to an enumeration operation on forwarding rules within a DNS forwarding ruleset.",
      "properties": {
        "value": {
          "description": "Enumeration of the forwarding rules.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ForwardingRule"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DnsResolverLinkProperties": {
      "description": "Represents the properties of a DNS resolver link.",
      "properties": {
        "dnsResolver": {
          "description": "The reference to the DNS resolver.",
          "$ref": "#/definitions/SubResource"
        },
        "provisioningState": {
          "description": "The current provisioning state of the link. This is a read-only property and any attempt to set this value will be ignored.",
          "$ref": "#/definitions/ProvisioningState",
          "readOnly": true
        }
      }
    },
    "DnsResolverLink": {
      "description": "Describes a DNS resolver link.",
      "properties": {
        "etag": {
          "description": "ETag of the DNS resolver link.",
          "type": "string"
        },
        "properties": {
          "description": "Properties of the DNS resolver link.",
          "$ref": "#/definitions/DnsResolverLinkProperties",
          "x-ms-client-flatten": true
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/ProxyResource"
        }
      ]
    },
    "DnsResolverLinkListResult": {
      "description": "The response to an enumeration operation on DNS resolver links.",
      "properties": {
        "value": {
          "description": "Enumeration of the DNS resolver links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DnsResolverLink"
          }
        },
        "nextLink": {
          "description": "The continuation token for the next page of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "IpConfiguration": {
      "description": "IP configuration.",
      "properties": {
        "subnet": {
          "description": "The reference to the subnet bound to the IP configuration.",
          "$ref": "#/definitions/SubResource"
        },
        "privateIpAddress": {
          "description": "Private IP address of the IP configuration.",
          "type": "string"
        },
        "privateIpAllocationMethod": {
          "description": "Private IP address allocation method.",
          "type": "string",
          "enum": [
            "Dynamic"
          ],
          "x-ms-enum": {
            "name": "IpAllocationMethod",
            "modelAsString": true
          }
        }
      }
    },
    "ProvisioningState": {
      "description": "The current provisioning state of the resource.",
      "type": "string",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true
      }
    },
    "TargetDnsServer": {
      "description": "Describes a server to forward the DNS queries to.",
      "properties": {
        "ipAddress": {
          "description": "DNS server IP address.",
          "type": "string"
        },
        "port": {
          "description": "DNS server port.",
          "type": "integer"
        }
      }
    },
    "Resource": {
      "description": "The core properties of ARM resources",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "Fully qualified resource Id for the resource. Example - '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/dnsResolvers/{resolverName}'."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "The name of the resource"
        },
        "type": {
          "type": "string",
          "readOnly": true,
          "description": "The type of the resource. Example - 'Microsoft.Network/dnsResolvers'."
        }
      },
      "x-ms-azure-resource": true
    },
    "TrackedResource": {
      "description": "The resource model definition for a ARM tracked top level resource",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The Azure Region where the resource lives"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "ProxyResource": {
      "description": "The resource model definition for an ARM proxy resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Resource"
        }
      ]
    },
    "SubResource": {
      "description": "Reference to another ARM resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource ID."
        }
      },
      "x-ms-azure-resource": true
    },
    "CloudError": {
      "description": "An error message",
      "type": "object",
      "properties": {
        "error": {
          "description": "The error message body",
          "$ref": "#/definitions/CloudErrorBody"
        }
      },
      "x-ms-external": true
    },
    "CloudErrorBody": {
      "description": "The body of an error message",
      "type": "object",
      "properties": {
        "code": {
          "description": "The error code",
          "type": "string"
        },
        "message": {
          "description": "A description of what caused the error",
          "type": "string"
        },
        "target": {
          "description": "The target resource of the error message",
          "type": "string"
        },
        "details": {
          "description": "Extra error information",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CloudErrorBody"
          }
        }
      },
      "x-ms-external": true
    }
  },
  "parameters": {
    "SubscriptionIdParameter": {
      "name": "subscriptionId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The subscription ID.",
      "x-ms-parameter-location": "client"
    },
    "ResourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the resource group.",
      "x-ms-parameter-location": "method"
    },
    "DnsResolverNameParameter": {
      "name": "resolverName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the DNS resolver.",
      "x-ms-parameter-location": "method"
    },
    "InboundEndpointNameParameter": {
      "name": "inboundEndpointName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the inbound endpoint for the DNS resolver.",
      "x-ms-parameter-location": "method"
    },
    "OutboundEndpointNameParameter": {
      "name": "outboundEndpointName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the outbound endpoint for the DNS resolver.",
      "x-ms-parameter-location": "method"
    },
    "DnsForwardingRulesetNameParameter": {
      "name": "rulesetName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the DNS forwarding ruleset.",
      "x-ms-parameter-location": "method"
    },
    "ForwardingRuleNameParameter": {
      "name": "ruleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the forwarding rule.",
      "x-ms-parameter-location": "method"
    },
    "VirtualNetworkNameParameter": {
      "name": "virtualNetworkName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the virtual network.",
      "x-ms-parameter-location": "method"
    },
    "TopParameter": {
      "name": "$top",
      "in": "query",
      "required": false,
      "type": "integer",
      "format": "int32",
      "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API Version.",
      "x-ms-parameter-location": "client"
    },
    "IfMatchParameter": {
      "name": "If-Match",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-client-name": "IfMatch",
      "description": "ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
      "x-ms-parameter-location": "method"
    },
    "IfNoneMatchParameter": {
      "name": "If-None-Match",
      "in": "header",
      "required": false,
      "type": "string",
      "x-ms-client-name": "IfNoneMatch",
      "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
      "x-ms-parameter-location": "method"
    }
  }
}