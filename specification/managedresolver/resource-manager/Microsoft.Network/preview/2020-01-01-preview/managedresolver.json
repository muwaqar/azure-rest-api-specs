{
    "swagger": "2.0",
    "info": {
      "title": "ManagedResolverManagementClient",
      "description": "The Managed DNS Resolver Management Client.",
      "version": "2020-01-01-preview"
    },
    "host": "management.azure.com",
    "schemes": [
      "https"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
      "azure_auth": {
        "type": "oauth2",
        "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
        "flow": "implicit",
        "description": "Azure Active Directory OAuth2 Flow",
        "scopes": {
          "user_impersonation": "impersonate your user account"
        }
      }
    },
    "paths": {
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolvers/{resolverName}": {
        "put": {
          "tags": [
            "Resolvers"
          ],
          "operationId": "Resolvers_CreateOrUpdate",
          "description": "Creates or updates a resolver. Does not modify virtual network or ruleset associated with the resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Resolver"
              },
              "description": "Parameters supplied to the CreateOrUpdate operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            },
            {
              "$ref": "#/parameters/IfNoneMatchParameter"
            }
          ],
          "responses": {
            "201": {
              "description": "The resolver has been created.",
              "schema": {
                "$ref": "#/definitions/Resolver"
              }
            },
            "200": {
              "description": "The resolver has been updated.",
              "schema": {
                "$ref": "#/definitions/Resolver"
              }
            },
            "202": {
              "description": "The resolver upsert operation has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PUT resolver": {
              "$ref": "./examples/Resolver_Put.json"
            }
          }
        },
        "patch": {
          "tags": [
            "Resolvers"
          ],
          "operationId": "Resolvers_Update",
          "description": "Updates a resolver. Does not modify virtual network or ruleset associated with the resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Resolver"
              },
              "description": "Parameters supplied to the Update operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The resolver has been updated.",
              "schema": {
                "$ref": "#/definitions/Resolver"
              }
            },
            "202": {
              "description": "The resolver update operation has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PATCH resolver": {
              "$ref": "./examples/Resolver_Patch.json"
            }
          }
        },
        "delete": {
          "tags": [
            "Resolvers"
          ],
          "operationId": "Resolvers_Delete",
          "description": "Deletes a resolver. WARNING: This operation cannot be undone. This operation does not delete or modify the virtual network or ruleset associated with the resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The resolver has been deleted."
            },
            "202": {
              "description": "The resolver delete operation has been accepted and will complete asynchronously."
            },
            "204": {
              "description": "The resolver was not found."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "DELETE resolver": {
              "$ref": "./examples/Resolver_Delete.json"
            }
          }
        },
        "get": {
          "tags": [
            "Resolvers"
          ],
          "operationId": "Resolvers_Get",
          "description": "Gets a resolver properties.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The resolver was found.",
              "schema": {
                "$ref": "#/definitions/Resolver"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "GET resolver": {
              "$ref": "./examples/Resolver_Get.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolvers": {
        "get": {
          "tags": [
            "Resolvers"
          ],
          "operationId": "Resolvers_ListByResourceGroup",
          "description": "Lists the resolvers within a resource group.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/ResolverListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET resolvers by Resource Group": {
              "$ref": "./examples/Resolver_ListInResourceGroup.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.Network/managedResolvers": {
        "get": {
          "tags": [
            "Resolvers"
          ],
          "operationId": "Resolvers_List",
          "description": "Lists the resolvers in all resource groups in a subscription.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/ResolverListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET resolvers by subscription": {
              "$ref": "./examples/Resolver_ListInSubscription.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolvers/{resolverName}/endpoints/{endpointName}": {
        "put": {
          "tags": [
            "Endpoints"
          ],
          "operationId": "Endpoints_CreateOrUpdate",
          "description": "Creates or updates a resolver endpoint.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/EndpointNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Endpoint"
              },
              "description": "Parameters supplied to the CreateOrUpdate operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            },
            {
              "$ref": "#/parameters/IfNoneMatchParameter"
            }
          ],
          "responses": {
            "201": {
              "description": "The resolver endpoint has been created.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "200": {
              "description": "The resolver endpoint has been updated.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "202": {
              "description": "The resolver endpoint upsert operation has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PUT resolver endpoint": {
              "$ref": "./examples/Endpoint_Put.json"
            }
          }
        },
        "patch": {
          "tags": [
            "Endpoints"
          ],
          "operationId": "Endpoints_Update",
          "description": "Updates a resolver endpoint.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/EndpointNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Endpoint"
              },
              "description": "Parameters supplied to the Update operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The resolver endpoint has been updated.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "202": {
              "description": "The resolver endpoint update operation has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PATCH resolver endpoint": {
              "$ref": "./examples/Endpoint_Patch.json"
            }
          }
        },
        "delete": {
          "tags": [
            "Endpoints"
          ],
          "operationId": "Endpoints_Delete",
          "description": "Deletes a resolver endpoint. WARNING: This operation cannot be undone.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/EndpointNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The resolver endpoint has been deleted."
            },
            "202": {
              "description": "The resolver endpoint delete operation has been accepted and will complete asynchronously."
            },
            "204": {
              "description": "The resolver endpoint was not found."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "DELETE resolver endpoint": {
              "$ref": "./examples/Endpoint_Delete.json"
            }
          }
        },
        "get": {
          "tags": [
            "Endpoints"
          ],
          "operationId": "Endpoints_Get",
          "description": "Gets a resolver endpoint properties.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/EndpointNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The resolver endpoint was found.",
              "schema": {
                "$ref": "#/definitions/Endpoint"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "GET resolver endpoint": {
              "$ref": "./examples/Endpoint_Get.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolvers/{resolverName}/endpoints": {
        "get": {
          "tags": [
            "Endpoints"
          ],
          "operationId": "Endpoints_List",
          "description": "Lists the endpoints for the specified resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/EndpointListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET endpoints by resolver": {
              "$ref": "./examples/Endpoint_List.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolvers/{resolverName}/rulesetLinks/{rulesetLinkName}": {
        "put": {
          "tags": [
            "RulesetLinks"
          ],
          "operationId": "RulesetLinks_CreateOrUpdate",
          "description": "Creates or updates a ruleset link to resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetLinkNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RulesetLink"
              },
              "description": "Parameters supplied to the CreateOrUpdate operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            },
            {
              "$ref": "#/parameters/IfNoneMatchParameter"
            }
          ],
          "responses": {
            "201": {
              "description": "The ruleset link to the resolver has been created.",
              "schema": {
                "$ref": "#/definitions/RulesetLink"
              }
            },
            "200": {
              "description": "The ruleset link to the resolver has been updated.",
              "schema": {
                "$ref": "#/definitions/RulesetLink"
              }
            },
            "202": {
              "description": "The operation to create ruleset link to resolver has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PUT ruleset link": {
              "$ref": "./examples/RulesetLink_Put.json"
            }
          }
        },
        "patch": {
          "tags": [
            "RulesetLinks"
          ],
          "operationId": "RulesetLinks_Update",
          "description": "Updates a ruleset link to resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetLinkNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/RulesetLink"
              },
              "description": "Parameters supplied to the Update operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The ruleset link to the resolver has been updated.",
              "schema": {
                "$ref": "#/definitions/RulesetLink"
              }
            },
            "202": {
              "description": "The operation to update ruleset link to resolver has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PATCH ruleset link": {
              "$ref": "./examples/RulesetLink_Patch.json"
            }
          }
        },
        "delete": {
          "tags": [
            "RulesetLinks"
          ],
          "operationId": "RulesetLinks_Delete",
          "description": "Deletes a ruleset link to resolver. WARNING: This operation cannot be undone.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetLinkNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The ruleset link to the resolver has been deleted."
            },
            "202": {
              "description": "The operation to delete ruleset link to resolver has been accepted and will complete asynchronously."
            },
            "204": {
              "description": "The ruleset link to the resolver was not found."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "DELETE ruleset link": {
              "$ref": "./examples/RulesetLink_Delete.json"
            }
          }
        },
        "get": {
          "tags": [
            "RulesetLinks"
          ],
          "operationId": "RulesetLinks_Get",
          "description": "Gets properties of a ruleset link to resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetLinkNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The ruleset link to the resolver was found.",
              "schema": {
                "$ref": "#/definitions/RulesetLink"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "GET ruleset link": {
              "$ref": "./examples/RulesetLink_Get.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolvers/{resolverName}/rulesetLinks": {
        "get": {
          "tags": [
            "RulesetLinks"
          ],
          "operationId": "RulesetLinks_List",
          "description": "Lists ruleset links to a specified resolver.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ResolverNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/RulesetLinkListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET ruleset links by resolver": {
              "$ref": "./examples/RulesetLink_List.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolverRulesets/{rulesetName}": {
        "put": {
          "tags": [
            "Rulesets"
          ],
          "operationId": "Rulesets_CreateOrUpdate",
          "description": "Creates or updates a ruleset. Does not modify rules within the ruleset.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Ruleset"
              },
              "description": "Parameters supplied to the CreateOrUpdate operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            },
            {
              "$ref": "#/parameters/IfNoneMatchParameter"
            }
          ],
          "responses": {
            "201": {
              "description": "The ruleset has been created.",
              "schema": {
                "$ref": "#/definitions/Ruleset"
              }
            },
            "200": {
              "description": "The ruleset has been updated.",
              "schema": {
                "$ref": "#/definitions/Ruleset"
              }
            },
            "202": {
              "description": "The ruleset upsert operation has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PUT ruleset": {
              "$ref": "./examples/Ruleset_Put.json"
            }
          }
        },
        "patch": {
          "tags": [
            "Rulesets"
          ],
          "operationId": "Rulesets_Update",
          "description": "Updates a ruleset. Does not modify rules within the ruleset.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Ruleset"
              },
              "description": "Parameters supplied to the Update operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The ruleset has been updated.",
              "schema": {
                "$ref": "#/definitions/Ruleset"
              }
            },
            "202": {
              "description": "The ruleset update operation has been accepted and will complete asynchronously."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "PATCH ruleset": {
              "$ref": "./examples/Ruleset_Patch.json"
            }
          }
        },
        "delete": {
          "tags": [
            "Rulesets"
          ],
          "operationId": "Rulesets_Delete",
          "description": "Deletes a ruleset. WARNING: This operation cannot be undone. All rules within the ruleset will also be deleted.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The ruleset has been deleted."
            },
            "202": {
              "description": "The ruleset delete operation has been accepted and will complete asynchronously."
            },
            "204": {
              "description": "The ruleset was not found."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-long-running-operation": true,
          "x-ms-examples": {
            "DELETE ruleset": {
              "$ref": "./examples/Ruleset_Delete.json"
            }
          }
        },
        "get": {
          "tags": [
            "Rulesets"
          ],
          "operationId": "Rulesets_Get",
          "description": "Gets a ruleset properties.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The ruleset was found.",
              "schema": {
                "$ref": "#/definitions/Ruleset"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "GET ruleset": {
              "$ref": "./examples/Ruleset_Get.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolverRulesets": {
        "get": {
          "tags": [
            "Rulesets"
          ],
          "operationId": "Rulesets_ListByResourceGroup",
          "description": "Lists the rulesets within a resource group.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/RulesetListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET ruleset by resource group": {
              "$ref": "./examples/Ruleset_ListInResourceGroup.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/providers/Microsoft.Network/managedResolverRulesets": {
        "get": {
          "tags": [
            "Rulesets"
          ],
          "operationId": "Rulesets_List",
          "description": "Lists the rulesets in all resource groups in a subscription.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/RulesetListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET ruleset by subscription": {
              "$ref": "./examples/Ruleset_ListInSubscription.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolverRulesets/{rulesetName}/rules/{ruleName}": {
        "put": {
          "tags": [
            "Rules"
          ],
          "operationId": "Rules_CreateOrUpdate",
          "description": "Creates or updates a rule in the specified ruleset.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/RuleNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Rule"
              },
              "description": "Parameters supplied to the CreateOrUpdate operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            },
            {
              "$ref": "#/parameters/IfNoneMatchParameter"
            }
          ],
          "responses": {
            "201": {
              "description": "The rule has been created.",
              "schema": {
                "$ref": "#/definitions/Rule"
              }
            },
            "200": {
              "description": "The rule has been updated.",
              "schema": {
                "$ref": "#/definitions/Rule"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "PUT rule": {
              "$ref": "./examples/Rule_Put.json"
            }
          }
        },
        "patch": {
          "tags": [
            "Rules"
          ],
          "operationId": "Rules_Update",
          "description": "Updates a rule in the specified ruleset.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/RuleNameParameter"
            },
            {
              "name": "parameters",
              "in": "body",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Rule"
              },
              "description": "Parameters supplied to the Update operation."
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The rule has been updated.",
              "schema": {
                "$ref": "#/definitions/Rule"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "PATCH rule": {
              "$ref": "./examples/Rule_Patch.json"
            }
          }
        },
        "delete": {
          "tags": [
            "Rules"
          ],
          "operationId": "Rules_Delete",
          "description": "Deletes a rule in the specified rulset. WARNING: This operation cannot be undone.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/RuleNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/IfMatchParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The rule has been deleted."
            },
            "204": {
              "description": "The rule was not found."
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "DELETE rule": {
              "$ref": "./examples/Rule_Delete.json"
            }
          }
        },
        "get": {
          "tags": [
            "Rules"
          ],
          "operationId": "Rules_Get",
          "description": "Gets a rule properties in the specified ruleset.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/RuleNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The rule was found.",
              "schema": {
                "$ref": "#/definitions/Rule"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-examples": {
            "GET rule": {
              "$ref": "./examples/Rule_Get.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolverRulesets/{rulesetName}/rules": {
        "get": {
          "tags": [
            "Rules"
          ],
          "operationId": "Rules_List",
          "description": "Lists the rules in the specified ruleset.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/RuleListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET rules by ruleset": {
              "$ref": "./examples/Rule_List.json"
            }
          }
        }
      },
      "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolverRulesets/{rulesetName}/resolverLinks": {
        "get": {
          "tags": [
            "ResolverLinks"
          ],
          "operationId": "ResolverLinks_List",
          "description": "Lists resolver links to a specified ruleset.",
          "parameters": [
            {
              "$ref": "#/parameters/SubscriptionIdParameter"
            },
            {
              "$ref": "#/parameters/ResourceGroupNameParameter"
            },
            {
              "$ref": "#/parameters/RulesetNameParameter"
            },
            {
              "$ref": "#/parameters/ApiVersionParameter"
            },
            {
              "$ref": "#/parameters/TopParameter"
            }
          ],
          "responses": {
            "200": {
              "description": "The operation succeeded.",
              "schema": {
                "$ref": "#/definitions/ResolverLinkListResult"
              }
            },
            "default": {
              "description": "Default response. It will be deserialized as per the Error definition.",
              "schema": {
                "$ref": "#/definitions/CloudError"
              }
            }
          },
          "x-ms-pageable": {
            "nextLinkName": "nextLink"
          },
          "x-ms-examples": {
            "GET resolver links by ruleset": {
              "$ref": "./examples/ResolverLink_List.json"
            }
          }
        }
      }
    },
    "definitions": {
      "ResolverProperties": {
        "description": "Represents the properties of a resolver.",
        "properties": {
          "virtualNetwork": {
            "description": "The reference to the virtual network. This cannot be changed after creation.",
            "$ref": "#/definitions/SubResource"
          },
          "maxNumberOfEndpoints": {
            "description": "The maximum number of endpoints that can be created for this resolver. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "numberOfEndpoints": {
            "description": "The current number of endpoints for this resolver. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "managedResolverState": {
            "description": "The status of the resolver. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "string",
            "enum": [
              "InboundOnly",
              "Connected",
              "Disconnected"
            ],
            "x-ms-enum": {
              "name": "ManagedResolverState",
              "modelAsString": true
            },
            "readOnly": true
          },
          "provisioningState": {
            "description": "The current provisioning state of the resolver. This is a read-only property and any attempt to set this value will be ignored.",
            "$ref": "#/definitions/ProvisioningState",
            "readOnly": true
          }
        }
      },
      "Resolver": {
        "description": "Describes a resolver.",
        "properties": {
          "etag": {
            "description": "The ETag of the resolver.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of a resolver.",
            "$ref": "#/definitions/ResolverProperties",
            "x-ms-client-flatten": true
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/TrackedResource"
          }
        ]
      },
      "ResolverListResult": {
        "description": "The response to an enumeration operation on resolvers.",
        "properties": {
          "value": {
            "description": "Enumeration of the resolvers.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Resolver"
            }
          },
          "nextLink": {
            "description": "The continuation token for the next page of results.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "EndpointProperties": {
        "description": "Represents the properties of a resolver endpoint.",
        "properties": {
          "subnet": {
            "description": "The reference to the subnet used for IP configurations.",
            "$ref": "#/definitions/SubResource"
          },
          "ipConfigurations": {
            "description": "IP configurations for the endpoint.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/IpConfiguration"
            }
          },
          "endpointState": {
            "description": "The status of the endpoint. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "string",
            "enum": [
              "Active",
              "Recovering",
              "Inactive"
            ],
            "x-ms-enum": {
              "name": "EndpointState",
              "modelAsString": true
            },
            "readOnly": true
          },
          "provisioningState": {
            "description": "The current provisioning state of the resolver endpoint. This is a read-only property and any attempt to set this value will be ignored.",
            "$ref": "#/definitions/ProvisioningState",
            "readOnly": true
          }
        }
      },
      "Endpoint": {
        "description": "Describes a resolver endpoint.",
        "properties": {
          "etag": {
            "description": "The ETag of the resolver endpoint.",
            "type": "string"
          },
          "zones": {
            "description": "Availability zone for endpoint provisioning.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "description": "Properties of a resolver endpoint.",
            "$ref": "#/definitions/EndpointProperties",
            "x-ms-client-flatten": true
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ProxyResource"
          }
        ]
      },
      "EndpointListResult": {
        "description": "The response to an enumeration operation on resolver endpoints.",
        "properties": {
          "value": {
            "description": "Enumeration of the resolver endpoints.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Endpoint"
            }
          },
          "nextLink": {
            "description": "The continuation token for the next page of results.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "RulesetLinkProperties": {
        "description": "Represents the properties of a ruleset link to a resolver.",
        "properties": {
          "managedResolverRuleset": {
            "description": "The reference to the ruleset. This cannot be changed after creation.",
            "$ref": "#/definitions/SubResource"
          },
          "provisioningState": {
            "description": "The current provisioning state of the link. This is a read-only property and any attempt to set this value will be ignored.",
            "$ref": "#/definitions/ProvisioningState",
            "readOnly": true
          }
        }
      },
      "RulesetLink": {
        "description": "Describes a ruleset link to resolver.",
        "properties": {
          "etag": {
            "description": "The ETag of the ruleset link to resolver.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of a ruleset link to resolver.",
            "$ref": "#/definitions/RulesetLinkProperties",
            "x-ms-client-flatten": true
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ProxyResource"
          }
        ]
      },
      "RulesetLinkListResult": {
        "description": "The response to an enumeration operation on ruleset links to resolver.",
        "properties": {
          "value": {
            "description": "Enumeration of the ruleset links to resolver.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/RulesetLink"
            }
          },
          "nextLink": {
            "description": "The continuation token for the next page of results.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "RulesetProperties": {
        "description": "Represents the properties of a ruleset.",
        "properties": {
          "maxNumberOfRules": {
            "description": "The maximum number of rules that can be created in this ruleset. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "numberOfRules": {
            "description": "The current number of rules in this ruleset. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "maxNumberOfResolverLinks": {
            "description": "The maximum number of resolvers that can be linked to this ruleset. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "numberOfResolverLinks": {
            "description": "The current number of resolvers that are linked to this ruleset. This is a read-only property and any attempt to set this value will be ignored.",
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "provisioningState": {
            "description": "The current provisioning state of the ruleset. This is a read-only property and any attempt to set this value will be ignored.",
            "$ref": "#/definitions/ProvisioningState",
            "readOnly": true
          }
        }
      },
      "Ruleset": {
        "description": "Describes a ruleset.",
        "properties": {
          "etag": {
            "description": "The ETag of the ruleset.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of a ruleset.",
            "$ref": "#/definitions/RulesetProperties",
            "x-ms-client-flatten": true
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/TrackedResource"
          }
        ]
      },
      "RulesetListResult": {
        "description": "The response to an enumeration operation on rulesets.",
        "properties": {
          "value": {
            "description": "Enumeration of the rulesets.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Ruleset"
            }
          },
          "nextLink": {
            "description": "The continuation token for the next page of results.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "RuleProperties": {
        "description": "Represents the properties of a rule within the ruleset.",
        "properties": {
          "action": {
            "description": "The action to take as part of rule execution. Use 'Forward' to route the DNS queries for the domain to servers specified as part of `targetDnsServers` property. Use 'Default' to render default behavior (skipping rule execution) for the specified domain. This value cannot be changed after the rule has been created.",
            "type": "string",
            "enum": [
              "Forward",
              "Default"
            ],
            "x-ms-enum": {
              "name": "ManagedResolverRuleAction",
              "modelAsString": true
            }
          },
          "targetDnsServers": {
            "description": "Enumeration of DNS servers to forward the DNS query to. This property is only applicable when the rule `type` is set to 'Forward'.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/TargetDnsServer"
            }
          },
          "disabled": {
            "description": "Is the rule disabled? Allows users to disable a specific rule without deleting it.",
            "type": "boolean"
          },
          "provisioningState": {
            "description": "The current provisioning state of the rule. This is a read-only property and any attempt to set this value will be ignored.",
            "$ref": "#/definitions/ProvisioningState",
            "readOnly": true
          }
        }
      },
      "Rule": {
        "description": "Describes a rule within a ruleset.",
        "properties": {
          "etag": {
            "description": "The ETag of the rule.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of a rule within the ruleset.",
            "$ref": "#/definitions/RuleProperties",
            "x-ms-client-flatten": true
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ProxyResource"
          }
        ]
      },
      "RuleListResult": {
        "description": "The response to an enumeration operation on rules within a ruleset.",
        "properties": {
          "value": {
            "description": "Enumeration of the rules within a ruleset.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Rule"
            }
          },
          "nextLink": {
            "description": "The continuation token for the next page of results.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "ResolverLinkProperties": {
        "description": "Represents the properties of a resolver link to a ruleset.",
        "properties": {
          "managedResolver": {
            "description": "The reference to the link for the current ruleset under the resolver.",
            "$ref": "#/definitions/SubResource"
          },
          "provisioningState": {
            "description": "The current provisioning state of the link. This is a read-only property and any attempt to set this value will be ignored.",
            "$ref": "#/definitions/ProvisioningState",
            "readOnly": true
          }
        }
      },
      "ResolverLink": {
        "description": "Describes a resolver link to ruleset.",
        "properties": {
          "etag": {
            "description": "The ETag of the resolver link to ruleset.",
            "type": "string"
          },
          "properties": {
            "description": "Properties of a resolver link to ruleset.",
            "$ref": "#/definitions/ResolverLinkProperties",
            "x-ms-client-flatten": true
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/ProxyResource"
          }
        ]
      },
      "ResolverLinkListResult": {
        "description": "The response to an enumeration operation on resolver links to ruleset.",
        "properties": {
          "value": {
            "description": "Enumeration of the resolver links to ruleset.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResolverLink"
            }
          },
          "nextLink": {
            "description": "The continuation token for the next page of results.",
            "type": "string",
            "readOnly": true
          }
        }
      },
      "IpConfiguration": {
        "description": "resolver endpoint IP configuration",
        "properties": {
          "privateIpAddress": {
            "description": "Private IP address for the IP configuration.",
            "type": "string"
          },
          "privateIpAllocationMethod": {
            "description": "Private IP address allocation method.",
            "type": "string",
            "enum": [
              "Static",
              "Dynamic"
            ],
            "x-ms-enum": {
              "name": "IpAllocationMethod",
              "modelAsString": true
            }
          }
        }
      },
      "ProvisioningState": {
        "description": "The current provisioning state of the resource.",
        "type": "string",
        "enum": [
          "Creating",
          "Updating",
          "Deleting",
          "Succeeded",
          "Failed",
          "Canceled"
        ],
        "x-ms-enum": {
          "name": "ProvisioningState",
          "modelAsString": true
        }
      },
      "TargetDnsServer": {
        "description": "Describes a server to forward the DNS queries to.",
        "properties": {
          "ipAddress": {
            "description": "DNS server IP address.",
            "type": "string"
          },
          "port": {
            "description": "DNS server port.",
            "type": "integer"
          }
        }
      },
      "Resource": {
        "description": "The core properties of ARM resources",
        "properties": {
          "id": {
            "type": "string",
            "readOnly": true,
            "description": "Fully qualified resource Id for the resource. Example - '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/managedResolvers/{resolverName}'."
          },
          "name": {
            "type": "string",
            "readOnly": true,
            "description": "The name of the resource"
          },
          "type": {
            "type": "string",
            "readOnly": true,
            "description": "The type of the resource. Example - 'Microsoft.Network/managedResolvers'."
          }
        },
        "x-ms-azure-resource": true
      },
      "TrackedResource": {
        "description": "The resource model definition for a ARM tracked top level resource",
        "properties": {
          "tags": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "x-ms-mutability": [
              "read",
              "create",
              "update"
            ],
            "description": "Resource tags."
          },
          "location": {
            "type": "string",
            "x-ms-mutability": [
              "read",
              "create"
            ],
            "description": "The Azure Region where the resource lives"
          }
        },
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ]
      },
      "ProxyResource": {
        "description": "The resource model definition for an ARM proxy resource.",
        "allOf": [
          {
            "$ref": "#/definitions/Resource"
          }
        ]
      },
      "SubResource": {
        "description": "Reference to another ARM resource.",
        "properties": {
          "id": {
            "type": "string",
            "description": "Resource ID."
          }
        },
        "x-ms-azure-resource": true
      },
      "CloudError": {
        "description": "An error message",
        "type": "object",
        "properties": {
          "error": {
            "description": "The error message body",
            "$ref": "#/definitions/CloudErrorBody"
          }
        },
        "x-ms-external": true
      },
      "CloudErrorBody": {
        "description": "The body of an error message",
        "type": "object",
        "properties": {
          "code": {
            "description": "The error code",
            "type": "string"
          },
          "message": {
            "description": "A description of what caused the error",
            "type": "string"
          },
          "target": {
            "description": "The target resource of the error message",
            "type": "string"
          },
          "details": {
            "description": "Extra error information",
            "type": "array",
            "items": {
              "$ref": "#/definitions/CloudErrorBody"
            }
          }
        },
        "x-ms-external": true
      }
    },
    "parameters": {
      "SubscriptionIdParameter": {
        "name": "subscriptionId",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "Gets subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
        "x-ms-parameter-location": "client"
      },
      "ResourceGroupNameParameter":{
        "name": "resourceGroupName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the resource group.",
        "x-ms-parameter-location": "method"
      },
      "ResolverNameParameter": {
        "name": "resolverName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the resolver.",
        "x-ms-parameter-location": "method"
      },
      "EndpointNameParameter": {
        "name": "endpointName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the resolver endpoint.",
        "x-ms-parameter-location": "method"
      },
      "RulesetLinkNameParameter": {
        "name": "rulesetLinkName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the ruleset link to resolver.",
        "x-ms-parameter-location": "method"
      },
      "RulesetNameParameter": {
        "name": "rulesetName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the ruleset.",
        "x-ms-parameter-location": "method"
      },
      "RuleNameParameter": {
        "name": "ruleName",
        "in": "path",
        "required": true,
        "type": "string",
        "description": "The name of the rule.",
        "x-ms-parameter-location": "method"
      },
      "TopParameter": {
        "name": "$top",
        "in": "query",
        "required": false,
        "type": "integer",
        "format": "int32",
        "description": "The maximum number of results to return. If not specified, returns up to 100 results.",
        "x-ms-parameter-location": "method"
      },
      "ApiVersionParameter": {
        "name": "api-version",
        "in": "query",
        "required": true,
        "type": "string",
        "description": "Client API Version.",
        "x-ms-parameter-location": "client"
      },
      "IfMatchParameter": {
        "name": "If-Match",
        "in": "header",
        "required": false,
        "type": "string",
        "x-ms-client-name": "IfMatch",
        "description": "The ETag of the resource. Omit this value to always overwrite the current resource. Specify the last-seen ETag value to prevent accidentally overwriting any concurrent changes.",
        "x-ms-parameter-location": "method"
      },
      "IfNoneMatchParameter": {
        "name": "If-None-Match",
        "in": "header",
        "required": false,
        "type": "string",
        "x-ms-client-name": "IfNoneMatch",
        "description": "Set to '*' to allow a new resource to be created, but to prevent updating an existing resource. Other values will be ignored.",
        "x-ms-parameter-location": "method"
      }
    }
  }
